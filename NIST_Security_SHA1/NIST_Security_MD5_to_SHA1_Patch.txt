diff -Nur OpenEMR_Git/contrib/util/express.php oemr_security/contrib/util/express.php
--- OpenEMR_Git/contrib/util/express.php	2011-03-08 12:51:53.000000000 +0530
+++ oemr_security/contrib/util/express.php	2011-03-08 12:57:35.000000000 +0530
@@ -144,7 +144,8 @@
 		flush();
 		break;
 	}
-	if (mysql_query("INSERT INTO users (id, username, password, authorized, lname,fname) VALUES (1,'$iuser','1a1dc91c907325c69271ddf0c944bc72',1,'$iuname','')") == FALSE) {
+	//// ViCareplus : As per NIST standard, SHA1 hash/digest of 'pass' is used
+	if (mysql_query("INSERT INTO users (id, username, password, authorized, lname,fname) VALUES (1,'$iuser','9d4e1e23bd5b727046a9e3b4b7db57bd8d6ee684',1,'$iuname','')") == FALSE) {
 		echo "ERROR.  Could not run queries.\n";
 		echo "<p>".mysql_error()." (#".mysql_errno().")\n";
 		flush();
diff -Nur OpenEMR_Git/Documentation/Package.txt oemr_security/Documentation/Package.txt
--- OpenEMR_Git/Documentation/Package.txt	2011-03-08 12:51:29.000000000 +0530
+++ oemr_security/Documentation/Package.txt	2011-03-08 12:57:10.000000000 +0530
@@ -16,7 +16,7 @@
 
 INSERT INTO groups VALUES (1,'Default','admin');
 under groups
-INSERT INTO users VALUES (1,'admin','1a1dc91c907325c69271ddf0c944bc72',1,NULL,NULL,"Administrator");
+INSERT INTO users VALUES (1,'admin','9d4e1e23bd5b727046a9e3b4b7db57bd8d6ee684',1,NULL,NULL,"Administrator");
 under users
 
 Drop this file in the /sql dir.
diff -Nur OpenEMR_Git/interface/login/login.php oemr_security/interface/login/login.php
--- OpenEMR_Git/interface/login/login.php	2011-03-08 12:51:55.000000000 +0530
+++ oemr_security/interface/login/login.php	2011-03-08 12:54:41.000000000 +0530
@@ -6,7 +6,7 @@
 
 $ignoreAuth=true;
 include_once("../globals.php");
-include_once("$srcdir/md5.js");
+include_once("$srcdir/sha1.js");
 include_once("$srcdir/sql.inc");
 ?>
 <html>
@@ -163,9 +163,10 @@
 <tr><td>&nbsp;</td><td>
 <input type="hidden" name="authPass">
 <?php if ($GLOBALS['use_adldap_auth'] == true): ?>
-<input type="submit" onClick="javascript:this.form.authPass.value=MD5(this.form.clearPass.value);" value=<?php xl('Login','e');?>>
+<!-- ViCareplus : As per NIST standard, the SHA1 encryption algorithm is used -->
+<input type="submit" onClick="javascript:this.form.authPass.value=SHA1(this.form.clearPass.value);" value=<?php xl('Login','e');?>>
 <?php else: ?>
-<input type="submit" onClick="javascript:this.form.authPass.value=MD5(this.form.clearPass.value);this.form.clearPass.value='';" value=<?php xl('Login','e');?>>
+<input type="submit" onClick="javascript:this.form.authPass.value=SHA1(this.form.clearPass.value);this.form.clearPass.value='';" value=<?php xl('Login','e');?>>
 <?php endif; ?>
 </td></tr>
 <tr><td colspan='2' class='text' style='color:red'>
diff -Nur OpenEMR_Git/interface/usergroup/user_admin.php oemr_security/interface/usergroup/user_admin.php
--- OpenEMR_Git/interface/usergroup/user_admin.php	2011-03-08 12:51:53.000000000 +0530
+++ oemr_security/interface/usergroup/user_admin.php	2011-03-08 12:52:52.000000000 +0530
@@ -5,7 +5,7 @@
 // of the License, or (at your option) any later version.
 require_once("../globals.php");
 require_once("../../library/acl.inc");
-require_once("$srcdir/md5.js");
+require_once("$srcdir/sha1.js");
 require_once("$srcdir/sql.inc");
 require_once("$srcdir/calendar.inc");
 require_once("$srcdir/formdata.inc.php");
@@ -198,7 +198,8 @@
 		}
 		//Checking for password history if the 'password history' feature is enabled.
 		if(document.forms[0].pwd_history.value == 1){
-			var p  = MD5(document.forms[0].clearPass.value);
+			// ViCareplus : As per NIST standard, the SHA1 encryption algorithm is used
+			var p  = SHA1(document.forms[0].clearPass.value);
 			var p1 = document.forms[0].pwd.value;
 			var p2 = document.forms[0].pwd_history1.value;
 			var p3 = document.forms[0].pwd_history2.value;
@@ -227,7 +228,8 @@
           }
 
 	if(flag == 0){
-		document.forms[0].newauthPass.value=MD5(document.forms[0].clearPass.value);document.forms[0].clearPass.value='';
+		// ViCareplus : As per NIST standard, SHA1 encryption algorithm is used
+		document.forms[0].newauthPass.value=SHA1(document.forms[0].clearPass.value);document.forms[0].clearPass.value='';
 		document.forms[0].submit();
 		parent.$.fn.fancybox.close(); 
 	}
diff -Nur OpenEMR_Git/interface/usergroup/usergroup_admin_add.php oemr_security/interface/usergroup/usergroup_admin_add.php
--- OpenEMR_Git/interface/usergroup/usergroup_admin_add.php	2011-03-08 12:51:53.000000000 +0530
+++ oemr_security/interface/usergroup/usergroup_admin_add.php	2011-03-08 12:53:13.000000000 +0530
@@ -1,7 +1,7 @@
 <?php
 require_once("../globals.php");
 require_once("../../library/acl.inc");
-require_once("$srcdir/md5.js");
+require_once("$srcdir/sha1.js");
 require_once("$srcdir/sql.inc");
 require_once("$srcdir/formdata.inc.php");
 require_once("$srcdir/options.inc.php");
@@ -40,7 +40,8 @@
 				}
 			}
 		} //secure_pwd if ends here
-		document.forms[0].newauthPass.value=MD5(document.forms[0].stiltskin.value);
+		// ViCareplus : As per NIST standard, SHA1 encryption algorithm is used		
+		document.forms[0].newauthPass.value=SHA1(document.forms[0].stiltskin.value);
 		document.forms[0].stiltskin.value='';
 		document.forms[0].submit();
 	} else {
diff -Nur OpenEMR_Git/interface/usergroup/usergroup_admin.php oemr_security/interface/usergroup/usergroup_admin.php
--- OpenEMR_Git/interface/usergroup/usergroup_admin.php	2011-03-08 12:51:53.000000000 +0530
+++ oemr_security/interface/usergroup/usergroup_admin.php	2011-03-08 12:53:33.000000000 +0530
@@ -1,7 +1,7 @@
 <?php
 require_once("../globals.php");
 require_once("../../library/acl.inc");
-require_once("$srcdir/md5.js");
+require_once("$srcdir/sha1.js");
 require_once("$srcdir/sql.inc");
 require_once("$srcdir/auth.inc");
 require_once("$srcdir/formdata.inc.php");
@@ -125,8 +125,8 @@
           formData('irnpool','G') .
           "' WHERE id = '" . formData('id','G') . "'");
       }
-
-     if ($_GET["newauthPass"] && $_GET["newauthPass"] != "d41d8cd98f00b204e9800998ecf8427e") { // account for empty
+     //VicarePlus: Empty string of SHA1 is validated
+     if ($_GET["newauthPass"] && $_GET["newauthPass"] != "da39a3ee5e6b4b0d3255bfef95601890afd80709") { // account for empty
 	$tqvar = formData('newauthPass','G');
 // When the user password is updated and the password history option is enabled, update the password history in database. A new password expiration is also calculated
 	if($GLOBALS['password_history'] != 0 ){
diff -Nur OpenEMR_Git/interface/usergroup/user_info.php oemr_security/interface/usergroup/user_info.php
--- OpenEMR_Git/interface/usergroup/user_info.php	2011-03-08 12:51:54.000000000 +0530
+++ oemr_security/interface/usergroup/user_info.php	2011-03-08 12:53:56.000000000 +0530
@@ -1,6 +1,6 @@
 <?php
 include_once("../globals.php");
-include_once("$srcdir/md5.js");
+include_once("$srcdir/sha1.js");
 include_once("$srcdir/sql.inc");
 include_once("$srcdir/auth.inc");
 ?>
@@ -46,9 +46,10 @@
     return false;
   }
 }
-  document.user_form.authPass.value=MD5(document.user_form.clearPass.value);
+  // ViCareplus : As per NIST standard, SHA1 encryption algorithm is used
+  document.user_form.authPass.value=SHA1(document.user_form.clearPass.value);
   document.user_form.clearPass.value='';
-  document.user_form.authPass2.value=MD5(document.user_form.clearPass2.value);
+  document.user_form.authPass2.value=SHA1(document.user_form.clearPass2.value);
   document.user_form.clearPass2.value='';
 }
 
@@ -64,7 +65,7 @@
 $update_pwd_failed=0;
 $ip=$_SERVER['REMOTE_ADDR'];
 if ($_GET["mode"] == "update") {
-  if ($_GET["authPass"] && $_GET["authPass2"] && $_GET["authPass"] != "d41d8cd98f00b204e9800998ecf8427e") { // account for empty
+  if ($_GET["authPass"] && $_GET["authPass2"] && $_GET["authPass"] != "da39a3ee5e6b4b0d3255bfef95601890afd80709") { // account for empty
     $tqvar = addslashes($_GET["authPass"]);
     $tqvar2 = addslashes($_GET["authPass2"]);
     if ($tqvar == $tqvar2)  {
@@ -146,5 +147,5 @@
 </HTML>
 
 <?php
-//  d41d8cd98f00b204e9800998ecf8427e == blank
+//  da39a3ee5e6b4b0d3255bfef95601890afd80709 == blank
 ?>
diff -Nur OpenEMR_Git/library/classes/Installer.class.php oemr_security/library/classes/Installer.class.php
--- OpenEMR_Git/library/classes/Installer.class.php	2011-03-08 12:51:48.000000000 +0530
+++ oemr_security/library/classes/Installer.class.php	2011-03-08 12:56:23.000000000 +0530
@@ -201,7 +201,7 @@
         "<p>".mysql_error()." (#".mysql_errno().")\n";
       return FALSE;
     }
-    $password_hash = md5( $this->iuserpass );
+    $password_hash = sha1( $this->iuserpass );
     if ($this->execute_sql("INSERT INTO users (id, username, password, authorized, lname, fname, facility_id, calendar, cal_ui) VALUES (1,'$this->iuser','$password_hash',1,'$this->iuname','',3,1,3)") == FALSE) {
       $this->error_message = "ERROR. Unable to add initial user\n" .
         "<p>".mysql_error()." (#".mysql_errno().")\n";
diff -Nur OpenEMR_Git/library/log.inc oemr_security/library/log.inc
--- OpenEMR_Git/library/log.inc	2011-03-08 12:51:47.000000000 +0530
+++ oemr_security/library/log.inc	2011-03-08 12:55:49.000000000 +0530
@@ -102,9 +102,9 @@
 
 /* Given an SQL insert/update that was just performeds:
  * - Find the table and primary id of the row that was created/modified
- * - Calculate the MD5 checksum of that row (with all the
+ * - Calculate the SHA1 checksum of that row (with all the
  *   column values concatenated together).
- * - Return the MD5 checksum as a 32 char hex string.
+ * - Return the SHA1 checksum as a 40 char hex string.
  * If this is not an insert/update query, return "".
  * If multiple rows were modified, return "".
  * If we're unable to determine the row modified, return "".
@@ -260,7 +260,8 @@
             $column_values .= $field;
         }
     }
-    return md5($column_values);
+    // ViCarePlus: As per NIST standard, the encryption algorithm SHA1 is used
+    return sha1($column_values);
 }
 
 /* Create an XML audit record corresponding to RFC 3881.
diff -Nur OpenEMR_Git/library/sha1.js oemr_security/library/sha1.js
--- OpenEMR_Git/library/sha1.js	1970-01-01 05:30:00.000000000 +0530
+++ oemr_security/library/sha1.js	2011-03-08 12:54:14.000000000 +0530
@@ -0,0 +1,145 @@
+<script language="javascript">
+//-------------------------------------------------------------------
+// This program is free software; you can redistribute it and/or
+// modify it under the terms of the GNU General Public License
+// as published by the Free Software Foundation; either version 2
+// of the License, or (at your option) any later version.
+//-------------------------------------------------------------------
+function SHA1 (msg) {
+	function rotate_left(n,s) {
+		var t4 = ( n<<s ) | (n>>>(32-s));
+		return t4;
+	};
+	function lsb_hex(val) {
+		var str="";
+		var i;
+		var vh;
+		var vl;
+		for( i=0; i<=6; i+=2 ) {
+			vh = (val>>>(i*4+4))&0x0f;
+			vl = (val>>>(i*4))&0x0f;
+			str += vh.toString(16) + vl.toString(16);
+		}
+		return str;
+	};
+	function cvt_hex(val) {
+		var str="";
+		var i;
+		var v;
+		for( i=7; i>=0; i-- ) {
+			v = (val>>>(i*4))&0x0f;
+			str += v.toString(16);
+		}
+		return str;
+	};
+	function Utf8Encode(string) {
+		string = string.replace(/\r\n/g,"\n");
+		var utftext = "";
+		for (var n = 0; n < string.length; n++) {
+			var c = string.charCodeAt(n);
+			if (c < 128) {
+				utftext += String.fromCharCode(c);
+			}
+			else if((c > 127) && (c < 2048)) {
+				utftext += String.fromCharCode((c >> 6) | 192);
+				utftext += String.fromCharCode((c & 63) | 128);
+			}
+			else {
+				utftext += String.fromCharCode((c >> 12) | 224);
+				utftext += String.fromCharCode(((c >> 6) & 63) | 128);
+				utftext += String.fromCharCode((c & 63) | 128);
+			}
+		}
+		return utftext;
+	};
+	var blockstart;
+	var i, j;
+	var W = new Array(80);
+	var H0 = 0x67452301;
+	var H1 = 0xEFCDAB89;
+	var H2 = 0x98BADCFE;
+	var H3 = 0x10325476;
+	var H4 = 0xC3D2E1F0;
+	var A, B, C, D, E;
+	var temp;
+ 
+	msg = Utf8Encode(msg);
+	var msg_len = msg.length;
+	var word_array = new Array();
+	for( i=0; i<msg_len-3; i+=4 ) {
+		j = msg.charCodeAt(i)<<24 | msg.charCodeAt(i+1)<<16 |
+		msg.charCodeAt(i+2)<<8 | msg.charCodeAt(i+3);
+		word_array.push( j );
+	}
+	switch( msg_len % 4 ) {
+		case 0:
+			i = 0x080000000;
+		break;
+		case 1:
+			i = msg.charCodeAt(msg_len-1)<<24 | 0x0800000;
+		break;
+ 
+		case 2:
+			i = msg.charCodeAt(msg_len-2)<<24 | msg.charCodeAt(msg_len-1)<<16 | 0x08000;
+		break;
+ 
+		case 3:
+			i = msg.charCodeAt(msg_len-3)<<24 | msg.charCodeAt(msg_len-2)<<16 | msg.charCodeAt(msg_len-1)<<8	| 0x80;
+		break;
+	}
+ 
+	word_array.push( i );
+	while( (word_array.length % 16) != 14 ) word_array.push( 0 );
+	word_array.push( msg_len>>>29 );
+	word_array.push( (msg_len<<3)&0x0ffffffff );
+	for ( blockstart=0; blockstart<word_array.length; blockstart+=16 ) {
+ 
+		for( i=0; i<16; i++ ) W[i] = word_array[blockstart+i];
+		for( i=16; i<=79; i++ ) W[i] = rotate_left(W[i-3] ^ W[i-8] ^ W[i-14] ^ W[i-16], 1);
+		A = H0;
+		B = H1;
+		C = H2;
+		D = H3;
+		E = H4;
+		for( i= 0; i<=19; i++ ) {
+			temp = (rotate_left(A,5) + ((B&C) | (~B&D)) + E + W[i] + 0x5A827999) & 0x0ffffffff;
+			E = D;
+			D = C;
+			C = rotate_left(B,30);
+			B = A;
+			A = temp;
+		}
+		for( i=20; i<=39; i++ ) {
+			temp = (rotate_left(A,5) + (B ^ C ^ D) + E + W[i] + 0x6ED9EBA1) & 0x0ffffffff;
+			E = D;
+			D = C;
+			C = rotate_left(B,30);
+			B = A;
+			A = temp;
+		}
+		for( i=40; i<=59; i++ ) {
+			temp = (rotate_left(A,5) + ((B&C) | (B&D) | (C&D)) + E + W[i] + 0x8F1BBCDC) & 0x0ffffffff;
+			E = D;
+			D = C;
+			C = rotate_left(B,30);
+			B = A;
+			A = temp;
+		}
+		for( i=60; i<=79; i++ ) {
+			temp = (rotate_left(A,5) + (B ^ C ^ D) + E + W[i] + 0xCA62C1D6) & 0x0ffffffff;
+			E = D;
+			D = C;
+			C = rotate_left(B,30);
+			B = A;
+			A = temp;
+		}
+ 		H0 = (H0 + A) & 0x0ffffffff;
+		H1 = (H1 + B) & 0x0ffffffff;
+		H2 = (H2 + C) & 0x0ffffffff;
+		H3 = (H3 + D) & 0x0ffffffff;
+		H4 = (H4 + E) & 0x0ffffffff;
+ 	}
+ 	var temp = cvt_hex(H0) + cvt_hex(H1) + cvt_hex(H2) + cvt_hex(H3) + cvt_hex(H4);
+ 	return temp.toLowerCase();
+ }
+</script>
diff -Nur OpenEMR_Git/login.php oemr_security/login.php
--- OpenEMR_Git/login.php	2011-03-08 12:51:28.000000000 +0530
+++ oemr_security/login.php	2011-03-08 12:58:20.000000000 +0530
@@ -1,7 +1,7 @@
 <?
 $ignoreAuth=true;
 include_once("../globals.php");
-include_once("$srcdir/md5.js");
+include_once("$srcdir/sha1.js");
 include_once("$srcdir/sql.inc");
 ?>
 <html>
@@ -61,7 +61,8 @@
 </td></tr>
 <tr><td>&nbsp;</td><td>
 <input type="hidden" name="authPass">
-<input type="submit" onClick="javascript:this.form.authPass.value=MD5(this.form.clearPass.value);this.form.clearPass.value='';" value="<? xl('Login','e'); ?>">
+<!-- ViCareplus : As per NIST standard, the SHA1 encryption algorithm is used-->
+<input type="submit" onClick="javascript:this.form.authPass.value=SHA1(this.form.clearPass.value);this.form.clearPass.value='';" value="<? xl('Login','e'); ?>">
 </td></tr>
 </table>
 
diff -Nur OpenEMR_Git/sql/3_2_0-to-4_0_0_upgrade.sql oemr_security/sql/3_2_0-to-4_0_0_upgrade.sql
--- OpenEMR_Git/sql/3_2_0-to-4_0_0_upgrade.sql	2011-03-08 12:51:31.000000000 +0530
+++ oemr_security/sql/3_2_0-to-4_0_0_upgrade.sql	2011-03-08 12:55:24.000000000 +0530
@@ -1007,3 +1007,6 @@
 UPDATE user_settings SET setting_value = 'style_oemr.css' WHERE setting_label = 'global:css_header' AND setting_value = 'style_default.css';
 #EndIf
 
+#IfTable users
+UPDATE users SET password='9d4e1e23bd5b727046a9e3b4b7db57bd8d6ee684',pwd_history1='',pwd_history2='';
+#EndIf
diff -Nur OpenEMR_Git/sql/defaults.sql oemr_security/sql/defaults.sql
--- OpenEMR_Git/sql/defaults.sql	2011-03-08 12:51:31.000000000 +0530
+++ oemr_security/sql/defaults.sql	2011-03-08 12:55:11.000000000 +0530
@@ -74,7 +74,7 @@
 # Dumping data for table `users`
 #
 #setup script does this automatically
-INSERT INTO `users` VALUES (1, 'admin', '1a1dc91c907325c69271ddf0c944bc72', 1, NULL, NULL, 'Admin', NULL, 'Administrator', '', NULL, '');
+INSERT INTO `users` VALUES (1, 'admin', '9d4e1e23bd5b727046a9e3b4b7db57bd8d6ee684', 1, NULL, NULL, 'Admin', NULL, 'Administrator', '', NULL, '');
 
 # phpMyAdmin SQL Dump
 # version 2.5.5-pl1
diff -Nur OpenEMR_Git/sql/example_patient_users.sql oemr_security/sql/example_patient_users.sql
--- OpenEMR_Git/sql/example_patient_users.sql	2011-03-08 12:51:30.000000000 +0530
+++ oemr_security/sql/example_patient_users.sql	2011-03-08 12:58:07.000000000 +0530
@@ -5,5 +5,5 @@
 #
 # This inserts (iff don't already exist) the referenced users
 
-INSERT INTO `users` ( `username`, `password`, `authorized`, `info`, `source`, `fname`, `mname`, `lname`, `federaltaxid`, `federaldrugid`, `upin`) VALUES ( 'davis', '1a1dc91c907325c69271ddf0c944bc72', 1, NULL, NULL, 'Admin', NULL, 'davis', '', NULL, '');
-INSERT INTO `users` ( `username`, `password`, `authorized`, `info`, `source`, `fname`, `mname`, `lname`, `federaltaxid`, `federaldrugid`, `upin`) VALUES ( 'hamming', '1a1dc91c907325c69271ddf0c944bc72', 1, NULL, NULL, 'Admin', NULL, 'hamming', '', NULL, '');
+INSERT INTO `users` ( `username`, `password`, `authorized`, `info`, `source`, `fname`, `mname`, `lname`, `federaltaxid`, `federaldrugid`, `upin`) VALUES ( 'davis', '9d4e1e23bd5b727046a9e3b4b7db57bd8d6ee684', 1, NULL, NULL, 'Admin', NULL, 'davis', '', NULL, '');
+INSERT INTO `users` ( `username`, `password`, `authorized`, `info`, `source`, `fname`, `mname`, `lname`, `federaltaxid`, `federaldrugid`, `upin`) VALUES ( 'hamming', '9d4e1e23bd5b727046a9e3b4b7db57bd8d6ee684', 1, NULL, NULL, 'Admin', NULL, 'hamming', '', NULL, '');
diff -Nur OpenEMR_Git/sql_upgrade.php oemr_security/sql_upgrade.php
--- OpenEMR_Git/sql_upgrade.php	2011-03-08 12:51:42.000000000 +0530
+++ oemr_security/sql_upgrade.php	2011-03-08 17:07:45.000000000 +0530
@@ -246,6 +246,14 @@
 releases, then choose the older of possible releases.</p>
 <p><input type='submit' name='form_submit' value='Upgrade Database' /></p>
 </form>
+<table bgcolor="#dfdfdf" width="80%" class=text><tr><td>
+<b>Important Note for 3.2.0 to 4.0.0 OpenEMR Upgradation:</b>
+<p>
+For NIST MUO consistency, we've modified the password algorithm from 'MD5' to 'SHA1'. In order to support upgrades, 
+the User Password will be resetted to <b><i> 'pass'</i></b> and the respective password history will also be cleared during OpenEMR upgrade from 3.2.0 to 4.0.x.
+</p><p>
+The adminstrators are requested to change their password and also instruct their users to change their password immediately after the OpenEMR upgrade from 3.2.0 to 4.0.x. </p>
+</td></tr></table>
 </center>
 </body>
 </html>
